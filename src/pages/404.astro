---
import BaseLayout from "@/layouts/BaseLayout.astro";
---

<BaseLayout title="404 Page Not Found">
  <div class="relative flex h-screen flex-col items-center justify-center">
    <h1 class="z-10 mb-8 text-center text-4xl font-bold">
      Page Not Found but I found you
    </h1>
    <div id="smiley" class="absolute text-6xl"></div>
    <button
      id="easterEgg"
      class="z-10 mt-8 rounded bg-purple-500 px-4 py-2 text-white transition-colors hover:bg-purple-600"
      >Don't Click Me</button
    >
  </div>
</BaseLayout>

<style>
  @keyframes shake {
    0% {
      transform: translate(1px, 1px) rotate(0deg);
    }
    10% {
      transform: translate(-1px, -2px) rotate(-1deg);
    }
    20% {
      transform: translate(-3px, 0px) rotate(1deg);
    }
    30% {
      transform: translate(3px, 2px) rotate(0deg);
    }
    40% {
      transform: translate(1px, -1px) rotate(1deg);
    }
    50% {
      transform: translate(-1px, 2px) rotate(-1deg);
    }
    60% {
      transform: translate(-3px, 1px) rotate(0deg);
    }
    70% {
      transform: translate(3px, 1px) rotate(-1deg);
    }
    80% {
      transform: translate(-1px, -1px) rotate(1deg);
    }
    90% {
      transform: translate(1px, 2px) rotate(0deg);
    }
    100% {
      transform: translate(1px, -2px) rotate(-1deg);
    }
  }

  #smiley {
    pointer-events: none;
    user-select: none;
    z-index: 5;
  }
</style>

<script>
  const smiley = document.getElementById("smiley")!;
  const easterEgg = document.getElementById("easterEgg")!;

  let size = 6;
  let intensity = 1;

  function updateSmiley() {
    size *= 1.3;
    intensity *= 2;
    smiley.style.fontSize = `${size}rem`;
    smiley.style.animation = `shake ${Math.max(0.5, 2 - intensity * 0.1)}s infinite`;
  }

  setInterval(updateSmiley, 1000);

  let clickCount = 0;
  let secretCode = "";
  const konami =
    "ArrowUpArrowUpArrowDownArrowDownArrowLeftArrowRightArrowLeftArrowRight";

  easterEgg.addEventListener("click", () => {
    clickCount++;
    if (clickCount === 5) {
      document.body.style.background =
        "linear-gradient(45deg, #ff00ff, #00ffff)";
      easterEgg.innerHTML =
        "You found the rainbow! Now type the secret code...";
      easterEgg.style.background = "#ff00ff";
    } else if (clickCount < 5) {
      easterEgg.textContent = `Don't Click Me (${5 - clickCount} more to go)`;
    }
  });

  document.addEventListener("keydown", (event) => {
    secretCode += event.key;
    if (secretCode.length > konami.length) {
      secretCode = secretCode.slice(-konami.length);
    }
    if (secretCode === konami) {
      activateSecretMode();
    }
  });

  function activateSecretMode() {
    document.body.style.background = "black";
    easterEgg.style.display = "none";
    smiley.textContent = "ðŸ‘¾";
    smiley.style.color = "lime";

    const canvas = document.createElement("canvas");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    canvas.style.position = "fixed";
    canvas.style.top = "0";
    canvas.style.left = "0";
    canvas.style.zIndex = "1";
    document.body.appendChild(canvas);

    const ctx = canvas.getContext("2d")!;
    const particles: Particle[] = [];

    class Particle {
      x: number;
      y: number;
      size: number;
      speedX: number;
      speedY: number;

      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 3 + 1;
        this.speedX = Math.random() * 3 - 1.5;
        this.speedY = Math.random() * 3 - 1.5;
      }
      update() {
        this.x += this.speedX;
        this.y += this.speedY;
        if (this.size > 0.2) this.size -= 0.1;
      }
      draw() {
        ctx.fillStyle = "white";
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
      }
    }

    function handleParticles() {
      for (let i = 0; i < particles.length; i++) {
        particles[i].update();
        particles[i].draw();
        if (particles[i].size <= 0.2) {
          particles.splice(i, 1);
          i--;
        }
      }
    }

    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      if (Math.random() < 0.1) particles.push(new Particle());
      handleParticles();
      requestAnimationFrame(animate);
    }

    animate();
  }
</script>
