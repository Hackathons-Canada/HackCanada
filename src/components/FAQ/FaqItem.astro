---
import FaqToggle from "./FaqToggle.astro";

interface Props {
  question: string;
  answer: string;
}

const { question, answer } = Astro.props;
---

<li class="faq-item cursor-pointer rounded-md border border-black/10 p-4">
  <button
    class="faq-question-container flex w-full cursor-pointer items-center justify-between text-left text-xl font-semibold"
  >
    <span class="faq-question">{question}</span>
    <FaqToggle isExpanded={false} />
  </button>
  <p class="faq-answer hidden">{answer}</p>
</li>

<script>
  import gsap from "gsap";

  const faqItems = document.querySelectorAll(".faq-item");
  faqItems.forEach((faqItem) => {
    faqItem.addEventListener("click", () => toggleFaq(faqItem));
  });

  function toggleFaq(faqItem: Element) {
    const answerElement = faqItem.querySelector(".faq-answer");
    const button = faqItem.querySelector(".faq-question-container");
    const toggleIcon = faqItem.querySelector(".faq-toggle");

    if (!button || !answerElement || !toggleIcon) return;

    // Accessibility stuff
    const isExpanded = button.getAttribute("aria-expanded") === "true";
    button.setAttribute("aria-expanded", isExpanded ? "false" : "true");

    toggleIcon.textContent = isExpanded ? "+" : "âˆ’";

    // Animate open & close
    if (isExpanded) {
      // Close animations

      const tl = gsap.timeline();

      tl.to(answerElement, {
        opacity: 0,
        height: 0,
        duration: 0.3,
        ease: "power2.inOut",
        onComplete: () => {
          answerElement.classList.add("hidden");
        },
      });
    } else {
      // Open animations

      const tl = gsap.timeline();

      tl.fromTo(
        answerElement,
        {
          height: 0,
          opacity: 0,
        },
        {
          opacity: 1,
          height: "auto",
          duration: 0.3,

          ease: "power2.inOut",
        },
      );
      answerElement.classList.remove("hidden");
    }
  }
</script>
