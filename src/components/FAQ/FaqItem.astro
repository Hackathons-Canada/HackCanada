---
import FaqToggle from "./FaqToggle.astro";

interface Props {
  question: string;
  answer: string;
}

const { question, answer } = Astro.props;
---

<li
  class="faq-item cursor-pointer space-y-4 rounded-md border border-black/10 p-4"
>
  <button
    class="faq-question-container flex w-full cursor-pointer items-center justify-between text-left text-xl font-semibold"
  >
    <span class="faq-question">{question}</span>
    <FaqToggle isExpanded={false} />
  </button>
  <p class="faq-answer hidden">{answer}</p>
</li>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Select all faq items and add a click event listener to each faq item
    const faqItems = document.querySelectorAll(".faq-item");
    faqItems.forEach((faqItem) => {
      faqItem.addEventListener("click", () => toggleFaq(faqItem));
    });

    function toggleFaq(faqItem: Element) {
      const answerElement = faqItem.querySelector(".faq-answer");
      const button = faqItem.querySelector(".faq-question-container");
      const toggleIcon = faqItem.querySelector(".faq-toggle");

      if (!button || !answerElement || !toggleIcon) return;

      const isExpanded = button.getAttribute("aria-expanded") === "true";
      button.setAttribute("aria-expanded", isExpanded ? "false" : "true");

      answerElement.classList.toggle("hidden");
      toggleIcon.textContent = isExpanded ? "+" : "âˆ’";
    }
  });
</script>

<style>
  .faq-answer.hidden {
    display: none;
  }
  .faq-item {
    cursor: pointer;
  }
  .faq-item .faq-toggle {
    transition: transform 0.3s ease;
  }
</style>
