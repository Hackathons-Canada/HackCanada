---
import { cn } from "@/lib/utils";

interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<div class={cn("absolute bottom-0 w-full lg:-bottom-32", className)}>
  <img
    src="hero-hills1.svg"
    alt=""
    class="gsapHill1Popup absolute -bottom-36 right-0 w-full min-w-[800px] opacity-0 md:-bottom-44 lg:-bottom-64"
  />
  <img
    src="hero-hills2.svg"
    alt=""
    class="gsapHill2Popup absolute -bottom-10 -left-28 w-full min-w-[800px] opacity-0 sm:bottom-3 sm:left-0 md:-bottom-10 lg:-bottom-14"
  />
  <div class="absolute bottom-0 w-full md:-bottom-14">
    <svg
      viewBox="0 0 874 220"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      preserveAspectRatio="none"
      class="max-w-screen h-auto w-full min-w-[320px]"
    >
      <path
        id="sledgeMotionPath"
        d="M0 1
            C50 1, 100 0, 150 1
            S250 4, 300 8
            S400 20, 450 32
            S550 61, 600 82
            S700 128, 750 147
            S850 179, 874 179"
        stroke-linecap="round"
        stroke="none"
        vector-effect="non-scaling-stroke"></path>
    </svg>
  </div>
</div>

<script>
  import { initGsapPopup } from "@/lib/gsapAnimations";
  import { gsap } from "gsap";
  import { MotionPathPlugin } from "gsap/MotionPathPlugin";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(MotionPathPlugin, ScrollTrigger);

  function calculateDuration() {
    const screenWidth = window.innerWidth;
    const normalDesktopWidth = 1024; // Assuming 1024px as the breakpoint for normal desktop

    if (screenWidth < normalDesktopWidth) {
      return 2; // 2 seconds for screens smaller than normal desktop
    } else {
      return 4; // 4 seconds for normal desktop and larger screens
    }
  }

  function setupAnimation() {
    const sledge = document.getElementById("sledge");
    const path = document.getElementById("sledgeMotionPath");

    if (sledge && path) {
      // Initial animation to move the sledge into view
      gsap.fromTo(
        sledge,
        {
          x: "0",
          opacity: 0,
        },
        {
          x: "100%",
          opacity: 1,
          duration: 1,
          ease: "power2.out",
          delay: 1.5,
        },
      );

      // Motion path animation
      gsap.to(sledge, {
        motionPath: {
          path: "#sledgeMotionPath",
          align: "#sledgeMotionPath",
          autoRotate: true,
          alignOrigin: [0, 0.9],
          start: 0,
          end: 1,
        },
        ease: "power4.Out",
        duration: calculateDuration(), // Use the calculated duration
        scrollTrigger: {
          trigger: "#heroSection",
          start: "10% top",
          end: "10% center",
          markers: false,
        },
        onComplete: () => {
          // Remove the sledge element after the animation is complete
          sledge.remove();
        },
      });
    }
  }

  function initAnimations() {
    // Initialize popup animations for hills
    initGsapPopup(".gsapHill1Popup", {
      duration: 0.8,
      delay: 0.6,
      start: "top bottom-=50",
    });
    initGsapPopup(".gsapHill2Popup", {
      duration: 0.8,
      delay: 0.9,
      start: "top bottom-=50",
    });
    setupAnimation();
  }

  // Initialize animations on DOM content loaded
  document.addEventListener("DOMContentLoaded", initAnimations);

  // Reinitialize animations on window width change
  let prevWidth = window.innerWidth;
  window.addEventListener("resize", () => {
    const currentWidth = window.innerWidth;
    if (currentWidth !== prevWidth) {
      prevWidth = currentWidth;
      gsap.killTweensOf("#sledge");
      setupAnimation();
    }
  });
</script>
