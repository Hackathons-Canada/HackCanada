---
import { sponsorConfig, sponsorsInfo } from "@/config/sponsorConfig";
import { Image } from "astro:assets";
import { type Sponsor } from "@/types/sponsors";

const getCardClass = (value: number): string => {
  const classes = [
    "lg:col-span-1 col-span-2",
    "col-span-1 lg:col-span-2",
    "col-span-3",
    "col-span-4",
  ];
  return classes[value - 1] || "";
};

const groupSponsors = (
  sponsors: Sponsor[],
): { sponsors: Sponsor[]; notFull: boolean }[] => {
  return sponsors
    .sort((a, b) => b.value - a.value)
    .reduce((groups, sponsor) => {
      const group =
        groups.find(
          (g) => g.reduce((sum, s) => sum + s.value, 0) + sponsor.value <= 4,
        ) || [];
      group.push(sponsor);
      if (!groups.includes(group)) groups.push(group);
      return groups;
    }, [] as Sponsor[][])
    .map((group) => ({
      sponsors: group,
      notFull: group.reduce((sum, s) => sum + s.value, 0) < 4,
    }))
    .sort(
      (a, b) =>
        b.sponsors.length - a.sponsors.length ||
        b.sponsors.reduce((sum, s) => sum + s.value, 0) -
          a.sponsors.reduce((sum, s) => sum + s.value, 0),
    );
};

const sponsorGroups = groupSponsors(sponsorsInfo);
---

<div class="container space-y-6 p-6">
  {
    sponsorGroups.length === 0 ? (
      <div class="mb-20 flex h-40 items-center justify-center">
        <div class="text-center">
          <p class="mb-2 text-2xl font-semibold text-gray-700">
            {sponsorConfig.sponsorText.altText}
          </p>
          <div class="inline-block">
            <span class="dots-flow" />
          </div>
        </div>
      </div>
    ) : (
      sponsorGroups.map(({ sponsors, notFull }, index) => (
        <div
          id={`sponsor-group-${index}`}
          class={`grid grid-cols-2 gap-4 lg:grid-cols-4 ${notFull ? "justify-center" : ""}`}
        >
          {sponsors.map((sponsor, sponsorIndex) => (
            <a
              href={sponsor.website}
              target="_blank"
              rel="noopener noreferrer"
              class={`sponsor-card group relative max-h-[300px] overflow-hidden rounded-3xl bg-orange-400 opacity-0 shadow-md ${getCardClass(sponsor.value)}`}
              data-sponsor-index={sponsorIndex}
            >
              <div class="sponsor-overlay absolute inset-0 bg-gradient-to-br from-gray-900/80 to-gray-900/40 opacity-0" />
              <Image
                src={sponsor.logoUrl}
                alt={`${sponsor.name} logo`}
                width={sponsor.value >= 3 ? 400 : 200}
                height={sponsor.value >= 3 ? 200 : 100}
                class="h-full w-full object-cover"
              />
              <div class="sponsor-content absolute inset-0 flex items-center justify-center p-4">
                <h3 class="text-center text-xl font-bold text-white opacity-0">
                  {sponsor.name}
                </h3>
              </div>
            </a>
          ))}
        </div>
      ))
    )
  }
</div>

<style>
  .sponsor-card {
    transform: translateZ(0);
    will-change: transform;
  }
</style>
