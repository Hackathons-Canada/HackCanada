---
// File: src/components/OptimizedSponsors.astro
import { Image } from "astro:assets";
import SectionHeading from "@/components/utilities/SectionHeading.astro";
import SectionWrapper from "@/components/utilities/SectionWrapper.astro";
import { sponsorConfig } from "@/config/sponsorConfig";
import SponsorPool from "@/components/animations/sponsors/SponsorPool.astro";
import SponsorCards from "@/components/animations/sponsors/SponsorCards.astro";
import SponsorJars from "@/components/animations/sponsors/SponsorJars.astro";
import { cn } from "@/lib/utils";
import beeGif from "@/assets/bee.gif";
import SponsorDescription from "@/components/animations/sponsors/SponsorDescription.astro";

const { className, id } = Astro.props;
---

<section id={id} class={cn("relative pt-32 h-[1200px]", className)}>
  <SectionHeading className="text-center">
    {sponsorConfig.heading}
  </SectionHeading>
  <SponsorDescription />
  <SponsorJars />
  <SponsorPool />
  <Image
    src={beeGif}
    alt="Animated bee flying"
    id="bee"
    class="pointer-events-none fixed left-0 top-0 h-auto w-full max-w-[10rem] -translate-x-[80%] -translate-y-[80%] scale-0 select-none opacity-0"
    width={300}
    height={300}
    loading="eager"
    decoding="async"
  />
</section>

<SectionWrapper class="bg-[#fce6a9]">
  <SponsorCards />
</SectionWrapper>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import anime from "animejs";

  gsap.registerPlugin(ScrollTrigger);

  const initialPoints =
    "M0 0s-3 0 56 0c57 0 49 0 74 0 15 0 32 0 56 0s37 0 58 0c19 0 18 0 54 0 31 0 32 0 45 0 8 0 18 0 31 0 16 0 16 0 30 0S418 0 433 0s15 0 36 0c20 0-4 0 33 0 40 0 20 0 40 0 10 0 20 0 45 0 29 0 37 0 55 0 13 0 28 0 48 0 28 0 36 0 52 0 28 0 18 0 66 0C844 0 871 0 871 0";
  const finalPoints =
    "M0 0s-3 106 47 112c57 6 49-66 74-73 15-4 32 27 56 27s37-22 58-27c19-4 18 73 54 73 31 0 32-63 45-73 8-7 18 5 31 3 16-3 16-7 30-10S418 61 433 62s15-26 36-24c20 2-4 62 33 63 40 1 20-46 40-57 10-5 20 37 45 36 29-2 37-41 55-43 13-2 28 22 48 21 28-1 36-31 52-32 28-2 18 71 66 72C844 100 871 4 871 4";

  const animateSVG = () =>
    anime({
      targets: "#morphingSvg path",
      d: [{ value: initialPoints }, { value: finalPoints }],
      duration: 2500,
      easing: "easeOutCubic",
    });

  const animateSponsorsSection = () => {
    const timeline = gsap.timeline({
      scrollTrigger: {
        trigger: "#sponsorSection",
        start: "top center",
        end: "bottom bottom",
        scrub: false,
      },
    });

    animateSVG();

    timeline
      .fromTo(
        [".jar-left", ".jar-right"],
        { rotation: (i) => (i ? 135 : -135), opacity: 0, scale: 0.8 },
        {
          rotation: 0,
          duration: 1,
          opacity: 1,
          scale: 1,
          ease: "back.out(1.7)",
        },
        0,
      )
      .fromTo(
        ".jar-drip",
        { scaleY: 0, opacity: 0 },
        { scaleY: 1, opacity: 1, duration: 0.8, ease: "power2.out" },
        0.8,
      )
      .fromTo(
        ".syrup-pool",
        { scaleY: 0, opacity: 0 },
        { scaleY: 1, opacity: 1, duration: 1, ease: "power2.out" },
        1.3,
      )
      .fromTo(
        ".sponsor-text",
        { opacity: 0, scale: 0.85, y: 20 },
        { opacity: 1, scale: 1, y: 0, duration: 0.8, ease: "back.out(1.7)" },
        1.3,
      )
      .add(() => {
        gsap.utils.toArray('[id^="sponsor-group-"]').forEach((group) => {
          gsap.fromTo(
            (group as HTMLElement).querySelectorAll(".sponsor-card"),
            { opacity: 0, y: 50, scale: 0.9 },
            {
              opacity: 1,
              y: 0,
              scale: 1,
              duration: 0.5,
              stagger: 0.1,
              ease: "power2.out",
              scrollTrigger: {
                trigger: group as gsap.DOMTarget,
                start: "top bottom-=100",
                toggleActions: "play none none reverse",
              },
            },
          );
        });
      }, 2.3);
  };

  const initSponsorCardHoverEffects = () => {
    gsap.utils.toArray(".sponsor-card").forEach((card) => {
      const typedCard = card as HTMLElement;
      const overlay = typedCard.querySelector(
        ".sponsor-overlay",
      ) as HTMLElement;
      const content = typedCard.querySelector(
        ".sponsor-content h3",
      ) as HTMLElement;
      const hoverTimeline = gsap
        .timeline({ paused: true })
        .to(overlay, { opacity: 1, duration: 0.3 })
        .to(typedCard, { scale: 1.05, zIndex: 10, duration: 0.3 }, 0)
        .to(content, { opacity: 1, scale: 1.5, duration: 0.3 }, 0);
      typedCard.addEventListener("mouseenter", () => hoverTimeline.play());
      typedCard.addEventListener("mouseleave", () => hoverTimeline.reverse());
    });
  };

  const animateBee = () => {
    const bee = document.getElementById("bee");
    const section = document.getElementById("sponsorSection");
    if (!bee || !section) return;

    const beeRect = bee.getBoundingClientRect();
    const beeWidth = beeRect.width;
    const beeHeight = beeRect.height;

    const beeXTo = gsap.quickTo(bee, "left", { duration: 0.8, ease: "power3" });
    const beeYTo = gsap.quickTo(bee, "top", { duration: 0.8, ease: "power3" });

    let isMouseInSection = false;

    const moveBee = (e: MouseEvent) => {
      if (!isMouseInSection) return;

      const sectionRect = section.getBoundingClientRect();
      const mouseX = e.clientX;
      const mouseY = e.clientY;

      const adjustedX = Math.max(
        sectionRect.left,
        Math.min(sectionRect.right - beeWidth, mouseX - beeWidth / 2),
      );
      const adjustedY = Math.max(
        sectionRect.top,
        Math.min(sectionRect.bottom - beeHeight, mouseY - beeHeight / 2),
      );

      beeXTo(adjustedX);
      beeYTo(adjustedY);
    };

    const handleMouseEnter = () => {
      isMouseInSection = true;
      gsap.to(bee, { opacity: 1, scale: 1, duration: 0.3 });
    };

    const handleMouseLeave = () => {
      isMouseInSection = false;
      gsap.to(bee, { opacity: 0, scale: 0, duration: 0.3 });
    };

    document.addEventListener("mousemove", moveBee);
    section.addEventListener("mouseenter", handleMouseEnter);
    section.addEventListener("mouseleave", handleMouseLeave);
  };

  document.addEventListener("DOMContentLoaded", () => {
    animateSponsorsSection();
    initSponsorCardHoverEffects();
    animateBee();
  });
</script>
