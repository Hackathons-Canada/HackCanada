---
import { cn } from "@/lib/utils";
import NavLinks from "./NavLinks.astro";
import Image from "astro/components/Image.astro";
import NavbarSocials from "./NavbarSocials.astro";

import DropdownMenu from "@/components/utilities/DropdownMenu.astro";
import MobileMenuToggle from "@/components/utilities/MobileMenuToggle.astro";

interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<header
  class={cn(
    className,
    "w-full px-6 h-20 mt-4 sm:mt-6 fixed top-0 left-0 right-0 z-50 navbar-animation opacity-0",
  )}
>
  <nav
    class="mx-auto flex max-w-6xl items-center justify-between rounded-[1.8em] border-[0.5px] border-t border-white bg-gradient-to-br from-white/50 to-white/30 px-4 pb-2 pt-2.5 text-center text-black backdrop-blur-md max-sm:flex-col max-sm:px-6 sm:px-6 md:px-6 lg:px-10"
  >
    <div class="flex w-full items-center gap-8 max-lg:justify-between">
      <a href="/" class="flex items-center">
        <Image
          src={"/logo-v1.webp"}
          alt="logo"
          width={144}
          height={144}
          class="size-12 object-contain max-sm:size-10"
        />
      </a>

      <MobileMenuToggle />

      <!-- Tablet and Desktop only -->
      <NavLinks />
    </div>
    <!-- Tablet and Desktop only -->
    <NavbarSocials />

    <!-- Mobile dropdown -->
    <div class="w-full sm:hidden">
      <DropdownMenu />
    </div>
  </nav>
</header>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const navbar = document.querySelector(".navbar-animation");
  const dropdown = navbar?.querySelector("#mobileDropdown");

  // Function to run the initial animation
  function runInitialAnimation() {
    return gsap.fromTo(
      navbar,
      { y: -100, opacity: 0 },
      {
        y: 0,
        opacity: 1,
        duration: 0.8,
        ease: "power2.out",
        onComplete: setupScrollTrigger,
      },
    );
  }

  // Function to setup ScrollTrigger
  function setupScrollTrigger() {
    ScrollTrigger.create({
      start: "top top",
      end: "max",
      onUpdate: (self) => {
        const scrollDirection = self.direction;
        const scrollVelocity = self.getVelocity();

        // Return early if the mobile menu is open
        if (!dropdown?.classList.contains("hidden")) {
          return;
        }

        if (scrollDirection === 1 && scrollVelocity > 50) {
          // Scrolling down fast, hide navbar
          gsap.to(navbar, { y: -100, duration: 0.5, ease: "power2.out" });
        } else if (scrollDirection === -1 || self.scroll() < 100) {
          // Scrolling up or near the top, show navbar
          gsap.to(navbar, { y: 0, duration: 0.5, ease: "power2.out" });
        }
      },
    });
  }

  // Run initial animation on page load
  if (document.readyState === "complete") {
    runInitialAnimation();
  } else {
    window.addEventListener("load", runInitialAnimation);
  }

  // Re-run initial animation on page transitions
  document.addEventListener("astro:after-swap", runInitialAnimation);
</script>
